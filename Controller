""" ARAP Webots main file """
import robot

def main():
    # Initialize summary list
    summary = []
    
    robot1 = robot.ARAP()
    robot1.init_devices()
    
    while True:
        robot1.reset_actuator_values()
        robot1.blink_leds()

        # Get color detection values from the camera
        red, green, blue = robot1.get_camera_image(5)

        # Initialize flag to check for new color detection
        color_detected = False

        # Check for red block detection
        if red > 206 and "Red" not in summary:  # Adjust threshold as necessary
            print("I see red")
            summary.append("Red")
            color_detected = True

        # Check for blue block detection
        if blue > 206 and "Blue" not in summary:  # Adjust threshold as necessary
            print("I see blue")
            summary.append("Blue")
            color_detected = True

        # Check for green block detection
        if green > 206 and "Green" not in summary:  # Adjust threshold as necessary
            print("I see green")
            summary.append("Green")
            color_detected = True

        # Print summary only if a new color was detected
        if color_detected:
            print(f"Summary: {', '.join(summary)}")

        # Obstacle detection and avoidance
        front_obstacle = robot1.front_obstacles_detected()
        right_obstacle = robot1.right_obstacles_detected()
        left_obstacle = robot1.left_obstacles_detected()

        # Check if any obstacle was detected
        if front_obstacle or right_obstacle or left_obstacle:
            # Determine which obstacle was encountered
            if front_obstacle:
                # Check if the front obstacle is a colored block based on recent color detection
                if red > 206 or green > 206 or blue > 206:
                    print("Hit a colored block in front.")
                robot1.move_backward()
                robot1.turn_left()
            elif right_obstacle:
                if red > 206 or green > 206 or blue > 206:
                    print("Hit a colored block on the right.")
                robot1.move_backward()
                robot1.turn_left()
            elif left_obstacle:
                if red > 206 or green > 206 or blue > 206:
                    print("Hit a colored block on the left.")
                robot1.move_backward()
                robot1.turn_right()
        else:
            # Continue normal movement if no obstacles detected
            robot1.run_braitenberg()
            print("Continue moving.")

        # Update actuators and step forward
        robot1.set_actuators()
        robot1.step()

if __name__ == "__main__":
    main()
