""" ARAP Webots main file """
import robot

def main():
    # Initialize summary list
    summary = []
    
    robot1 = robot.ARAP()
    robot1.init_devices()

    while True:
        robot1.reset_actuator_values()
        robot1.blink_leds()

        # Get color detection values
        red, green, blue = robot1.get_camera_image(5)
        print(f"Detected colors - Red: {red}, Green: {green}, Blue: {blue}")

        # Check for the red block
        if red > 100 and "Red" not in summary:  # Adjusted threshold
            print("I see red")
            summary.append("Red")

        # Check for the blue block
        if blue > 100 and "Blue" not in summary:  # Adjusted threshold
            print("I see blue")
            summary.append("Blue")

        # Check for the green block
        if green > 100 and "Green" not in summary:  # Adjusted threshold
            print("I see green")
            summary.append("Green")

        # Print summary of encountered colors
        print(f"Summary: {', '.join(summary)}")

        # Obstacle detection logic
        front_obstacle = robot1.front_obstacles_detected()
        right_obstacle = robot1.right_obstacles_detected()
        left_obstacle = robot1.left_obstacles_detected()

        if front_obstacle or right_obstacle or left_obstacle:
            print("Obstacle detected! Checking color...")  # Log comment on obstacle detection
            
            # Optionally, you can check the color of the obstacle that was hit if needed
            if front_obstacle:
                print("Obstacle hit in front.")
                robot1.move_backward()  # You can modify movement behavior as needed
                robot1.turn_left()  # Example of turning left
            elif right_obstacle:
                print("Obstacle hit on the right.")
                robot1.move_backward()
                robot1.turn_left()  # Example of turning left
            elif left_obstacle:
                print("Obstacle hit on the left.")
                robot1.move_backward()
                robot1.turn_right()  # Example of turning right
        else:
            robot1.run_braitenberg()  # Continue normal movement if no obstacles are detected
            print("No obstacles detected. Continuing forward.")

        robot1.set_actuators()
        robot1.step()

if __name__ == "__main__":
    main()
